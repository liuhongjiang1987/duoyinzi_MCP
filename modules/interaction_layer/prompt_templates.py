"""
Prompt 模板模块

定义 MCP 交互中使用的 Prompt 模板
"""

from typing import Dict, Any


class PromptTemplates:
    """Prompt 模板管理器 - 提供用户友好的交互引导"""
    
    def __init__(self):
        self.templates = self._initialize_templates()
    
    def _initialize_templates(self) -> Dict[str, str]:
        """初始化所有 Prompt 模板 - 每个模板都明确说明输入来源和下一步操作"""
        return {
            'field_analysis': """
🔍 **字段分析阶段** - 基于您上传的原始数据

**当前分析原料**：字段"{field_name}"的原始数据样本
- 数据类型：{data_type}
- 样本数据：{sample_data}

**系统已完成的处理**：
✅ 数据格式验证通过
✅ 统计特征计算完成
✅ 极性倾向初步判断

**需要您确认的关键决策**：
1. 📊 **边界值范围**：基于数据分布和业务实际，合理的取值范围是什么？
2. 🎯 **字段极性**：这个字段是"越大越好"、"越小越好"，还是"中间值最好"？
3. 🔧 **隶属函数**：建议使用线性函数、S型函数还是其他类型？

**下一步操作**：确认这些参数后，系统将自动生成隶属度计算配置

请以结构化格式回答，例如：
```
边界值范围：[最小值, 最大值]
字段极性：效益型/成本型/中性
隶属函数建议：下界型/上界型/中间型
```
""",
            
            'polarity_confirmation': """
🎯 **极性确认阶段** - 基于系统对您数据的智能分析

**分析结果来源**：系统对字段"{field_name}"的统计分析和极性检测算法
**推荐依据**：{suggested_polarity}

**业务含义解读**：
- 📈 **效益型**：值越大表示业务表现越好（如收入、效率指标）
- 📉 **成本型**：值越小表示业务表现越好（如成本、风险指标）  
- ⚖️ **中性型**：值在某个中间范围表示最好（如温度、pH值）

**您的确认很重要**：
系统推荐是基于数学特征，但您了解业务实际。请确认：
□ 推荐极性符合业务逻辑
□ 需要调整为其他极性类型
□ 需要重新分析数据特征

**下一步操作**：确认极性后，系统将自动调整数据方向并生成计算配置

您的专业判断：
""",
            
            'boundary_verification': """
📊 **边界值验证阶段** - 基于您的原始数据统计分析

**数据来源**：字段"{field_name}"的完整数据集
**统计特征**（系统自动计算）：
- 最小值：{min_value}
- 最大值：{max_value}
- 平均值：{mean_value}
- 标准差：{std_value}

**智能推荐**：{suggested_boundaries}

**验证要点**：
1. 🔍 **极值检查**：最小值/最大值是否有异常数据？
2. 📏 **范围合理性**：推荐的边界值是否覆盖正常业务场景？
3. ⚠️ **异常值处理**：是否需要剔除明显异常的数据点？

**业务实际考量**：
- 这个范围是否符合您的业务经验？
- 是否有行业标准或监管要求需要特殊考虑？
- 数据收集过程中是否存在系统性偏差？

**下一步操作**：确认边界值后，系统将生成最终的隶属度计算配置

您的验证意见：
""",
            
            'membership_calculation': """
🚀 **隶属度计算准备阶段** - 基于前面确认的所有配置

**计算原料汇总**：
- 📋 数据维度：{data_shape} （来自您上传的数据文件）
- ⚙️ 字段配置：{field_configs} （来自极性和边界值确认）
- 🔧 隶属函数：{membership_functions} （基于数学模型选择）

**系统即将执行**：
1. ✅ 数据预处理（极性调整、标准化）
2. 🔄 隶属度函数应用（多级别计算）
3. 📊 结果验证（数学严谨性检查）

**计算结果将包含**：
- 每个业务对象在各因子上的多级隶属度
- 完整的隶属度矩阵（可直接用于TOPSIS评价）
- 计算过程详细日志（便于验证和调试）

**下一步操作**：计算完成后，您可以选择：
- 📈 直接查看隶属度矩阵结果
- 🎯 进行TOPSIS综合评价
- 💾 导出结果用于其他分析

确认开始计算？（是/否）：
""",
            
            'result_interpretation': """
📊 **计算结果分析阶段** - 基于刚刚完成的隶属度计算

**计算过程确认**？
- 隶属度矩阵维度：{matrix_shape}
⏱️ 计算耗时：{computation_time}
🎯 数据质量：{data_quality}

**结果来源说明**：
这些结果是基于您确认的配置参数，通过下界型隶属度函数计算得出的。每个数值都经过数学验证，确保：
- 每行隶属度和为1.0（概率完整性）
- 数值范围在[0,1]区间内（数学合理性）
- 计算过程可重现（科学严谨性）

**结果解读建议**？
1. 📈 **整体分布**：检查隶属度在各等级的分布是否合理
2. 🔍 **异常值识别**：关注隶属度异常的业务对象
3. 📊 **业务对应**：将结果与您的业务认知进行对比

**🚀 重要：多属性综合评估阶段**

您现在可以进行多因子综合评估！我们提供以下方法：

**🎯 TOPSIS综合评价**（推荐）：
- **适用场景**：多因子绩效评估、风险排序、方案优选
- **输入需求**：需要您提供各因子权重（如：年龄30%、收入40%、风险30%）
- **输出结果**：综合评分（0-1）和排名，便于直接决策
- **优势**：考虑各因子与理想解的相对接近度，结果直观易懂

**⚖️ VIKOR妥协解方法**（备选）：
- **适用场景**：需要平衡各因子冲突、寻求妥协解的情况
- **输入需求**：因子权重和可接受的妥协参数
- **输出结果**：妥协解排序和群体效用最大化方案
- **优势**：能处理因子间的冲突，提供更稳健的综合评价

**📊 简单加权平均**（基础）：
- **适用场景**：因子间相对独立、权重明确的情况
- **输入需求**：各因子权重配置
- **输出结果**：加权综合得分
- **优势**：计算简单，结果易于理解

**🎯 下一步操作建议**：
1. **选择综合评估方法**（推荐TOPSIS）
2. **确定因子权重**（根据业务重要性）
3. **执行综合计算**（系统自动化处理）
4. **获得最终排名**（用于决策支持）

**📋 权重配置建议**：
- 请根据业务实际确定各因子重要性百分比
- 权重总和应为100%
- 可考虑多组权重进行敏感性分析

**例如**：
```
年龄权重：30%（年龄越小越好）
收入权重：40%（收入越高越好）  
风险权重：30%（风险越低越好）
```

**您希望进行哪种综合评估？权重如何配置？**

您对结果的专业解读：
""",
            
            'topsis_calculation': """
🎯 **TOPSIS综合评价阶段** - 基于隶属度矩阵的多因子决策

**评价原料**：上一步生成的隶属度矩阵
**算法原理**：通过计算各方案与正理想解的相对接近度进行排序

**系统将自动执行**？
1. 🎯 确定正理想解和负理想解
2. 📏 计算各方案到理想解的欧氏距离
3. 📊 计算相对接近度（V值）
4. 🏆 生成综合评价排名

**结果解读要点**？
- **V值**：0-1之间，越大表示越接近正理想解
- **排名**：V值大小决定的方案优劣顺序
- **稳定性**：可通过权重敏感性分析验证结果稳健性

**📊 TOPSIS方法特点**？
- **优点**：计算简单直观，结果易于理解；能充分利用原始数据信息
- **适用场景**：多属性决策、方案优选、绩效评估、风险排序
- **权重影响**：权重设置会显著影响最终排序结果
- **数据要求**：需要预先进行标准化处理（隶属度矩阵已满足）

**⚠️ 使用注意事项**？
1. **权重敏感性**：建议进行多组权重测试，验证结果稳健性
2. **极端值处理**：注意异常值对理想解确定的影响
3. **业务解释**：V值大小需结合业务实际进行解读
4. **多方法对比**：可与其他方法（如VIKOR）结果进行对比验证

**🔧 权重配置指导**？
**确定权重的方法**：
- 📊 **主观赋权法**：基于专家经验或业务重要性
- 📈 **客观赋权法**：基于数据变异程度（如熵权法）
- 🎯 **组合赋权法**：主客观结合，提高科学性

**权重配置建议**：
- 重要因子：30-50%（核心业务指标）
- 次要因子：10-25%（辅助参考指标）
- 调节因子：5-15%（微调影响指标）

**业务应用建议**？
这个结果可以直接用于：
- 🏆 业务对象绩效排序
- ⚠️ 风险等级划分
- 📈 资源配置优先级确定

**下一步操作**：获得综合评价结果后，您可以选择：
- 📊 生成可视化报告
- 🔄 调整权重重新评价
- 💾 导出完整分析报告
- 📋 进行敏感性分析

**确认开始TOPSIS计算？请回复：是/否**
**如需权重配置建议，请告知您的业务场景**
""",
            
            'workflow_summary': """
🎉 **完整工作流程完成** - 从原始数据到综合评价

**📋 您已完成的所有步骤**？
1. ✅ 数据上传与解析
2. ✅ 字段分析与极性确认  
3. ✅ 配置模板生成
4. ✅ 隶属度矩阵计算
5. ✅ TOPSIS综合评价（如选择）

**📊 基于您的数据，我们得到了**：
- 原始数据 → 隶属度矩阵 → 综合评价结果的完整转换
- 每个环节都有详细的中间结果和验证信息
- 所有计算过程都经过数学严谨性验证

**🎯 结果应用建议**：
根据您的业务实际，这些结果可以用于：
- 📈 **绩效评估**：识别表现优秀和需要改进的业务对象
- ⚠️ **风险预警**：发现潜在的高风险业务实体
- 🎯 **资源配置**：为决策提供量化依据
- 📊 **趋势分析**：对比不同时期的评价结果

**🔍 质量保证**：
- 算法实现经过论文数据验证
- 计算过程完整可追溯
- 结果符合模糊数学理论要求

**📈 进阶分析建议**：

**🔄 敏感性分析**（推荐）：
- **目的**：测试权重变化对结果的影响程度
- **方法**：设置多组权重配置，对比结果变化
- **价值**：识别关键影响因子，提高决策稳健性

**📊 多方法对比**（高级）：
- **TOPSIS vs VIKOR**：对比不同方法的排序结果
- **加权平均 vs 模糊综合**：验证方法选择的合理性
- **价值**：确保评价结果的科学性和可靠性

**📋 分层评价**（复杂场景）：
- **多级因子**：建立主因子-子因子的分层体系
- **逐层综合**：先子因子综合，再主因子评价
- **价值**：处理复杂的业务评价需求

**下一步操作建议**：
- 💾 **保存结果**：导出完整分析报告
- 🔄 **深入分析**：进行多情景对比分析
- 📋 **制定策略**：基于评价结果制定改进措施
- 📊 **持续监控**：建立定期评价机制

**🎯 针对您的业务场景，建议**：
如需具体的进阶分析建议，请告知：
1. 您的具体业务应用场景
2. 是否有特定的决策需求
3. 是否需要与其他评价方法对比
4. 是否有历史数据需要对比分析

还有什么其他分析需求吗？
"""
        }
    
    def get_template(self, template_name: str, **kwargs) -> str:
        """
        获取填充后的 Prompt 模板
        
        Args:
            template_name: 模板名称
            **kwargs: 模板参数
            
        Returns:
            填充后的 Prompt 内容
        """
        if template_name not in self.templates:
            raise ValueError(f"未知的模板名称: {template_name}")
        
        template = self.templates[template_name]
        return template.format(**kwargs)
    
    def add_template(self, name: str, template: str):
        """添加新的 Prompt 模板"""
        self.templates[name] = template
    
    def get_step_guidance(self, current_step: str) -> str:
        """
        获取当前步骤的操作指导和下一步建议
        
        Args:
            current_step: 当前步骤名称
            
        Returns:
            步骤指导信息
        """
        guidance_map = {
            'data_upload': {
                'purpose': '将业务数据导入系统',
                'input': 'CSV格式的业务数据文件',
                'next_steps': ['查看字段分析报告', '了解数据特征分布', '确认数据质量']
            },
            'field_analysis': {
                'purpose': '理解每个字段的业务含义和数学特征',
                'input': '第一步上传的原始数据',
                'next_steps': ['确认字段极性设置', '验证边界值合理性', '调整计算参数']
            },
            'polarity_adjustment': {
                'purpose': '根据业务逻辑调整数据方向',
                'input': '确认的极性配置',
                'next_steps': ['生成计算配置', '验证参数设置', '准备隶属度计算']
            },
            'membership_calculation': {
                'purpose': '将原始数据转换为模糊隶属度表示',
                'input': '调整后的数据和配置模板',
                'next_steps': ['查看隶属度矩阵', '选择综合评估方法', '配置因子权重']
            },
            'topsis_evaluation': {
                'purpose': '基于隶属度矩阵进行多因子综合评估',
                'input': '隶属度矩阵和评价权重',
                'next_steps': ['生成可视化报告', '进行敏感性分析', '导出分析报告']
            },
            'comprehensive_evaluation': {
                'purpose': '多因子权重配置和综合评估方法选择',
                'input': '隶属度矩阵和业务需求',
                'next_steps': ['TOPSIS综合评价', 'VIKOR妥协解分析', '多方法对比验证']
            }
        }
        
        if current_step in guidance_map:
            info = guidance_map[current_step]
            return f"""
📋 **步骤指导**：{info['purpose']}
📊 **输入原料**：{info['input']}
🎯 **下一步可执行**：
""" + "\n".join([f"{i+1}. {step}" for i, step in enumerate(info['next_steps'])])
        
        return "继续按照系统提示操作即可"
    
    def get_business_guidance(self, business_context: str) -> str:
        """
        根据业务场景提供专业的应用建议
        
        Args:
            business_context: 业务场景描述
            
        Returns:
            业务应用指导
        """
        if '风险' in business_context or '风控' in business_context:
            return """
💡 **风险管控场景应用建议**：

**结果解读重点**：
- 高V值业务对象：相对低风险，可给予更多资源支持
- 低V值业务对象：需要重点关注，制定针对性改进措施
- 关注隶属度分布异常的对象，可能存在特殊风险因素

**权重配置建议**：
- **核心因子**：应赋予较高权重（40-60%），如风险评分、绩效指标等
- **财务因子**：中等权重（20-35%），如收入、成本、盈利能力等
- **运营因子**：较低权重（15-25%），如效率、增长性等

**综合评估方法选择**：
- **TOPSIS**：适合风险排序，结果直观易懂
- **VIKOR**：适合平衡风险与收益，寻求妥协解
- **敏感性分析**：必须测试权重变化对风险等级的影响

**后续操作建议**：
1. 📊 建立风险监控仪表板，定期更新评价结果
2. 🔄 结合历史数据，分析风险变化趋势
3. 🎯 为不同风险等级制定差异化的管理策略
4. 📋 定期校准模型参数，确保评价准确性
"""
        elif '绩效' in business_context or '评价' in business_context:
            return """
💡 **绩效评价场景应用建议**：

**结果解读重点**：
- 识别表现优秀的业务对象，总结成功经验
- 发现需要改进的对象，分析具体原因
- 关注评价结果的稳定性，避免短期波动影响判断

**权重配置建议**：
- **效益因子**：应赋予较高权重（35-50%），如收入、利润、增长率等
- **效率因子**：中等权重（25-35%），如成本控制、资源利用率等
- **质量因子**：重要权重（20-30%），如客户满意度、合规性等

**综合评估方法选择**：
- **TOPSIS**：适合绩效排序，便于奖惩决策
- **分层评价**：适合大型组织，先部门后个人
- **多方法对比**：验证评价结果的科学性和公正性

**后续操作建议**：
1. 📈 建立绩效跟踪机制，定期重新评价
2. 🎯 为不同绩效等级制定针对性的改进计划
3. 📊 生成可视化报告，便于管理层决策参考
4. 🔄 结合业务实际，持续优化评价体系
"""
        elif '投资' in business_context or '项目' in business_context:
            return """
💡 **投资决策场景应用建议**：

**结果解读重点**：
- 综合评分高的项目：优先考虑，但需进一步尽调
- 评分中等的项目：需要深入分析具体风险点
- 评分低的项目：谨慎考虑或设置更严格条件

**权重配置建议**：
- **收益因子**：核心权重（40-60%），如预期收益、ROI等
- **风险因子**：重要权重（25-40%），如市场风险、技术风险等
- **战略因子**：适度权重（15-25%），如战略匹配度、协同效应等

**综合评估方法选择**：
- **TOPSIS**：适合项目排序，结果清晰明了
- **VIKOR**：适合多目标权衡，考虑收益与风险平衡
- **情景分析**：结合乐观、中性、悲观情景进行综合评价

**后续操作建议**：
1. 📊 建立项目储备库，定期更新评价结果
2. 🔄 跟踪已投项目表现，验证评价模型有效性
3. 🎯 结合市场变化，动态调整评价标准
4. 📋 建立投资决策支持系统
"""
        else:
            return """
💡 **通用业务应用建议**：

**结果价值最大化**：
1. 📊 **定期监控**：建立周期性评价机制，跟踪变化趋势
2. 🎯 **精准施策**：根据评价结果制定差异化的业务策略
3. 📋 **持续优化**：结合实际效果，调整评价参数和方法
4. 🔄 **闭环管理**：将评价结果与实际业务改进形成闭环

**综合评估方法选择指导**：
- **TOPSIS**：通用性强，适合大多数排序决策场景
- **VIKOR**：适合需要考虑多方利益平衡的情况
- **敏感性分析**：所有场景都应测试权重影响

**权重配置通用原则**：
- **重要性原则**：核心指标权重应显著高于次要指标
- **独立性原则**：高度相关的指标应适当降低权重
- **稳定性原则**：权重设置应经过敏感性测试验证
- **业务性原则**：权重配置必须符合业务逻辑

**注意事项**：
- 评价结果是决策参考，不是唯一依据
- 需要结合业务专家经验进行综合判断
- 定期校验模型，确保评价结果的有效性
- 建议进行多方法对比，提高结果可靠性
"""


# 全局实例
prompt_templates = PromptTemplates()